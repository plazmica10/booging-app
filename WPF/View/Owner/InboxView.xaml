<Page x:Class="BookingApp.WPF.View.Owner.InboxView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:BookingApp.WPF.View.Owner"
      xmlns:materialIcons="clr-namespace:Material.Icons.WPF;assembly=Material.Icons.WPF"
      mc:Ignorable="d" 
      d:DesignHeight="750" d:DesignWidth="1300"
      Title="InboxView">

    <Page.Resources>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="0 0 20 0"/>
            <Setter Property="FontWeight" Value="DemiBold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="border" Padding="0,5,0,5" Background="{TemplateBinding Background}" BorderThickness="0" BorderBrush="White" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="LightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="2*"/>
        </Grid.ColumnDefinitions>

        <Border Margin="50 10 20 10" BorderBrush="Black" BorderThickness="2" CornerRadius="20">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Margin="10 0 10 0" FontSize="20" FontWeight="Bold" VerticalAlignment="Center">Notifications</Label>
                <!--<TextBox Grid.Row="0" Margin="0 0 10 0" Height="30" Width="200" VerticalAlignment="Center" HorizontalAlignment="Right"></TextBox>-->

                <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                    <ScrollViewer.Resources>
                        <Style TargetType="{x:Type ScrollBar}">
                            <Setter Property="Width" Value="20"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid>
                                            <Track x:Name="PART_Track" Grid.Column="0" IsDirectionReversed="True">
                                                <Track.Thumb>
                                                    <Thumb Style="{DynamicResource ScrollBarThumb}" />
                                                </Track.Thumb>
                                            </Track>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                            <Setter Property="Background" Value="LightGray"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="Width" Value="15"></Setter>
                            <Setter Property="Margin" Value="0 0 4 0"></Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="10"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ScrollViewer.Resources>

                    <ItemsControl ItemsSource="{Binding Requests}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <Button Cursor="Hand" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Padding="0" Background="Transparent" BorderThickness="0" Margin="0" Command="{Binding Path=DataContext.OpenReq, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding RequestId}">
                                    <Button.Template>
                                        <ControlTemplate TargetType="Button">
                                                <ContentPresenter Content="{TemplateBinding Content}"/>
                                        </ControlTemplate>
                                    </Button.Template>
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Status}" Value="Pending">
                                                    <Setter Property="IsEnabled" Value="True"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                    
                                    
                                    <Border x:Name="ItemBorder" Background="Transparent"  BorderThickness="2" Margin="5" Padding="5" CornerRadius="20">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="BorderBrush" Value="Black"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Selected}" Value="True">
                                                        <Setter Property="BorderBrush" Value="Blue"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="2*"/>
                                            </Grid.ColumnDefinitions>

                                            <Image Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" Width="100">
                                                <Image.Source>
                                                    <BitmapImage DecodePixelWidth="100" UriSource="{Binding UserPhoto}"/>
                                                </Image.Source>
                                            </Image>

                                            <Grid Grid.Column="1">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>

                                                <TextBlock Grid.Row="0">Rescheduling request</TextBlock>
                                                <TextBlock Grid.Row="1" Margin="0" FontSize="16" FontWeight="Bold" Text="{Binding UserName}"></TextBlock>

                                                <materialIcons:MaterialIcon Foreground="Orange" Grid.Row="2" Grid.RowSpan="2" Kind="ClockEditOutline" Height="50" Width="50" HorizontalAlignment="Right">
                                                    <materialIcons:MaterialIcon.Style>
                                                        <Style TargetType="materialIcons:MaterialIcon">
                                                            <Setter Property="Visibility" Value="Hidden"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Status}" Value="Pending">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </materialIcons:MaterialIcon.Style>
                                                </materialIcons:MaterialIcon>
                                                <materialIcons:MaterialIcon Foreground="Green" Grid.Row="2" Grid.RowSpan="2" Kind="CheckCircleOutline" Height="50" Width="50" HorizontalAlignment="Right">
                                                    <materialIcons:MaterialIcon.Style>
                                                        <Style TargetType="materialIcons:MaterialIcon">
                                                            <Setter Property="Visibility" Value="Hidden"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Status}" Value="Approved">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </materialIcons:MaterialIcon.Style>
                                                </materialIcons:MaterialIcon>
                                                <materialIcons:MaterialIcon Foreground="Red" Grid.Row="2" Grid.RowSpan="2" Kind="AlphabetXCircleOutline" Height="50" Width="50" HorizontalAlignment="Right">
                                                    <materialIcons:MaterialIcon.Style>
                                                        <Style TargetType="materialIcons:MaterialIcon">
                                                            <Setter Property="Visibility" Value="Hidden"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Status}" Value="Denied">
                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </materialIcons:MaterialIcon.Style>
                                                </materialIcons:MaterialIcon>
                                            </Grid>
                                        </Grid>
                                    </Border>
                                </Button>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
            </Grid>
        </Border>

        <Border Margin="20 10 50 10" Padding="15" BorderBrush="Black" BorderThickness="2" CornerRadius="20" Grid.Column="1" DataContext="{Binding SelectedRequest}">
            <StackPanel>
                <Border BorderThickness="2" BorderBrush="Black" CornerRadius="20" Margin="0 0 0 10" Padding="10" Height="345" Width="400" VerticalAlignment="Top" HorizontalAlignment="Left">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!--  -->
                        <Grid Grid.Row="0" Margin="0 0 0 15">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Image Grid.Column="0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="100" Height="100" Source="{Binding GuestPhoto}"/>

                                <StackPanel Margin="20 0 0 0" Grid.Column="1">
                                <TextBlock FontSize="20" FontWeight="Bold" Margin="0 0 0 20" Text="{Binding GuestName}" />
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="16" Text="For:" Margin="0 0 10 0"></TextBlock>
                                    <TextBlock FontSize="16" FontWeight="DemiBold" Text="{Binding AccommodationName}" />
                                </StackPanel>
                            </StackPanel>
                        </Grid>

                        <!--  -->
                        <StackPanel Grid.Row="1">
                            <StackPanel Margin="0 0 0 10" Orientation="Horizontal">
                                <TextBlock FontSize="16" Text="Check in:" Margin="0 0 27 0"></TextBlock>
                                <TextBlock FontSize="16" Text="{Binding OldCheckIn, StringFormat=d}"></TextBlock>
                            </StackPanel>
                            <StackPanel Margin="0 0 0 10" Orientation="Horizontal">
                                <TextBlock FontSize="16" Text="Check out:" Margin="0 0 16 0"></TextBlock>
                                <TextBlock FontSize="16" Text="{Binding OldCheckOut, StringFormat=d}"></TextBlock>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="30 0 0 5">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DatesAvailable}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <materialIcons:MaterialIcon Foreground="Green" Width="40" Height="40" Kind="ArrowDownBoldCircle"/>
                                <TextBlock VerticalAlignment="Center" FontSize="18" Foreground="Green" Margin="10 0 0 0" Text="Dates available"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="30 0 0 5">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DatesAvailable}" Value="False">
                                                <Setter Property="Visibility" Value="Visible"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <materialIcons:MaterialIcon Foreground="Red" Width="40" Height="40" Kind="ArrowDownBoldCircle"/>
                                <TextBlock VerticalAlignment="Center" FontSize="18" Foreground="Red" Margin="10 0 0 0" Text="Dates unavailable"/>
                            </StackPanel>

                            <StackPanel Margin="0 0 0 10" Orientation="Horizontal">
                                <TextBlock FontSize="16" Text="Check in:" Margin="0 0 27 0"></TextBlock>
                                <TextBlock FontSize="16" Text="{Binding NewCheckIn, StringFormat=d}"></TextBlock>
                            </StackPanel>
                            <StackPanel Margin="0 0 0 10" Orientation="Horizontal">
                                <TextBlock FontSize="16" Text="Check out:" Margin="0 0 16 0"></TextBlock>
                                <TextBlock FontSize="16" Text="{Binding NewCheckOut, StringFormat=d}"></TextBlock>
                            </StackPanel>
                        </StackPanel>

                        <!-- -->
                        <StackPanel Grid.Row="2" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                            <Button Command="{Binding Path=DataContext.ApproveCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}" Cursor="Hand" Style="{StaticResource ButtonStyle}" Content="Approve"/>
                            <Button Command="{Binding Path=DataContext.DenyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}" Cursor="Hand" Style="{StaticResource ButtonStyle}" Content="Deny"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <Border BorderThickness="2" BorderBrush="Black" CornerRadius="20" Padding="10" HorizontalAlignment="Right">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>

                        <Image Grid.Column="0" Stretch="Fill" VerticalAlignment="Top" HorizontalAlignment="Left" Width="258" Height="258" Margin="0 0 20 0" Source="{Binding AccommodationPhoto}">
                            <Image.Clip>
                                <RectangleGeometry RadiusX="20" RadiusY="20" Rect="0, 0, 258, 258"/>
                            </Image.Clip>
                        </Image>
                            

                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Margin="0 0 0 10" FontSize="22" FontWeight="Bold" Text="{Binding AccommodationName}"/>
                            <TextBlock Grid.Row="1" Margin="0 0 0 40" FontSize="16" FontWeight="DemiBold" Text="{Binding AccommodationLocation}"/>
                            <StackPanel Grid.Row="2" Margin="0 0 0 20" Orientation="Horizontal">
                                <TextBlock FontSize="16" Margin="0 0 21 0" Text="Check in:"/>
                                <TextBlock FontSize="16" Text="{Binding OldCheckIn, StringFormat=d}"></TextBlock>
                            </StackPanel>
                            <StackPanel Grid.Row="3" Margin="0 0 0 55" Orientation="Horizontal">
                                <TextBlock FontSize="16" Margin="0 0 10 0" Text="Check out:"/>
                                <TextBlock FontSize="16" Text="{Binding OldCheckOut, StringFormat=d}"></TextBlock>
                            </StackPanel>
                            <StackPanel Grid.Row="4" Margin="0 0 0 0">
                                <Button Cursor="Hand" Style="{StaticResource ButtonStyle}" VerticalAlignment="Bottom" HorizontalAlignment="Right" Content="Details" Command="{Binding Path=DataContext.DetailsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}"/>
                            </StackPanel>

                        </Grid>

                    </Grid>
                </Border>
            </StackPanel>
        </Border>

        <!-- Deny popup -->
        <Popup Placement="Center" IsOpen="{Binding IsPopupOpen}" StaysOpen="False" AllowsTransparency="True" Grid.Column="0">
            <Border Padding="15" HorizontalAlignment="Left" BorderThickness="2" BorderBrush="Black" CornerRadius="15" Background="White">
                <StackPanel HorizontalAlignment="Left">
                    <TextBlock FontSize="20" Margin="0 0 0 10" Text="Enter comment for deny:"/>
                    <TextBox Text="{Binding DenyComment}" HorizontalAlignment="Left" Margin="0 0 0 10" TextWrapping="Wrap" Height="100" Width="300"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Cursor="Hand" Style="{StaticResource ButtonStyle}" Command="{Binding SubmitDenyCommand}" Content="Submit"/>
                        <Button Cursor="Hand" Margin="0 0 0 0" Style="{StaticResource ButtonStyle}" Command="{Binding ClosePopupCommand}" Content="Cancel"/>
                    </StackPanel>
                </StackPanel>
            </Border>
        </Popup>

        <!-- Successful approve popup -->
        <Popup Placement="Center" IsOpen="{Binding IsSuccessApproveOpen}" StaysOpen="False" AllowsTransparency="True" Grid.Column="0">
            <Border Padding="15" HorizontalAlignment="Left" BorderThickness="2" BorderBrush="Black" CornerRadius="15" Background="White">
                <StackPanel>
                    <TextBlock Margin="0 0 0 10" FontSize="20" Text="Successfully approved the request."/>
                    <Button Margin="0" Cursor="Hand" HorizontalAlignment="Right" Command="{Binding ConfirmSuccessCommand}" Style="{StaticResource ButtonStyle}" Content="Ok"/>
                </StackPanel>
            </Border>
        </Popup>

        <!-- Successful deny popup -->
        <Popup Placement="Center" IsOpen="{Binding IsSuccessDenyOpen}" StaysOpen="False" AllowsTransparency="True" Grid.Column="0">
            <Border Padding="15" HorizontalAlignment="Left" BorderThickness="2" BorderBrush="Black" CornerRadius="15" Background="White">
                <StackPanel>
                    <TextBlock Margin="0 0 0 10" FontSize="20" Text="Successfully denied the request."/>
                    <Button Margin="0" Cursor="Hand" HorizontalAlignment="Right" Command="{Binding ConfirmSuccessCommand}" Style="{StaticResource ButtonStyle}" Content="Ok"/>
                </StackPanel>
            </Border>
        </Popup>

    </Grid>

</Page>
