<ResourceDictionary
xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
xmlns:emoji="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
xmlns:command="clr-namespace:BookingApp.Command">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ColorsStyles.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="PageGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource GlobalBackground}"/>
    </Style>

    <Style x:Key="PageScrollViewer" TargetType="ScrollViewer">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
        <Setter Property="Background" Value="{StaticResource GlobalBackground}"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>


    <Storyboard x:Key="GlowAnimationText">
        <ColorAnimation
            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
            To="{StaticResource GlobalForegroundGlow}" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"/>
    </Storyboard>

    <Style x:Key="TextAnimated" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{StaticResource GlowAnimationText}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EmojiTextAnimated" TargetType="emoji:TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{StaticResource GlowAnimationText}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Storyboard x:Key="GlowAnimationLink">
        <ColorAnimation
            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
            To="{StaticResource GlobalForegroundLinkGlow}" Duration="0:0:1" AutoReverse="True" RepeatBehavior="Forever"/>
    </Storyboard>

    <Style x:Key="LinkAnimated" TargetType="TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{StaticResource GlowAnimationLink}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EmojiLinkAnimated" TargetType="emoji:TextBlock">
        <Style.Triggers>
            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard Storyboard="{StaticResource GlowAnimationLink}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>


    <!-- ENABLE ANIMATIONS
    
    <Style x:Key="Text" TargetType="TextBlock" BasedOn="{StaticResource TextAnimated}">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
    </Style>

    <Style x:Key="EmojiText" TargetType="emoji:TextBlock" BasedOn="{StaticResource EmojiTextAnimated}">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
    </Style>

    <Style x:Key="Link" TargetType="TextBlock" BasedOn="{StaticResource LinkAnimated}">
        <Setter Property="Foreground" Value="{StaticResource GlobalForegroundLink}"/>
    </Style>

    <Style x:Key="EmojiLink" TargetType="emoji:TextBlock" BasedOn="{StaticResource EmojiLinkAnimated}">
        <Setter Property="Foreground" Value="{StaticResource GlobalForegroundLink}"/>
    </Style>

    -->



    <Style x:Key="Text" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
    </Style>

    <Style x:Key="EmojiText" TargetType="emoji:TextBlock">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
    </Style>

    <Style x:Key="Link" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource GlobalForegroundLink}"/>
    </Style>

    <Style x:Key="EmojiLink" TargetType="emoji:TextBlock">
        <Setter Property="Foreground" Value="{StaticResource GlobalForegroundLink}"/>
    </Style>
    


    <Style x:Key="EmojiTitle" TargetType="emoji:TextBlock" BasedOn="{StaticResource EmojiText}">
        <Setter Property="Margin" Value="5 5 5 1"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="EmojiSubtitle" TargetType="emoji:TextBlock" BasedOn="{StaticResource EmojiText}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="5 5 5 1"/>
    </Style>

    <Storyboard x:Key="StatusMessageAnimation">
        <ColorAnimation
            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
            To="{StaticResource StatusMessageColorBegin}" Duration="0:0:0.5"/>
        <ColorAnimation
            Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)"
            To="{StaticResource StatusMessageColorEnd}" Duration="0:0:0.5"
            BeginTime="0:0:0.5"/>
    </Storyboard>

    <Style x:Key="StatusMessageStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>

        <Style.Triggers>
            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                <BeginStoryboard Storyboard="{StaticResource StatusMessageAnimation}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ValidationMessageStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
        <Setter Property="Margin" Value="5 1 0 1"/>

        <Style.Triggers>
            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                <BeginStoryboard Storyboard="{StaticResource StatusMessageAnimation}"/>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CoolButtonStackPanel" TargetType="StackPanel">
        <Setter Property="Margin" Value="5 5 5 50"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="CoolButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
        <Setter Property="Background" Value="{StaticResource InputBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource InputBorder}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="8">
                        <ContentPresenter Margin="2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource InputBackgroundMouseOver}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource InputBorderMouseOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource InputBackgroundMousePressed}"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource InputBorderMousePressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource GlobalForegroundDisabled}"/>
                            <Setter Property="Background" Value="{StaticResource GlobalBackgroundDisabled}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource GlobalBorderDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <emoji:TextBlock Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="BottomBorderStyle" TargetType="Border">
        <Setter Property="DockPanel.Dock" Value="Bottom"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Background" Value="{StaticResource GlobalBackgroundNavbar}"/>
        <Setter Property="BorderBrush" Value="{StaticResource GlobalBorderLight}"/>
        <Setter Property="BorderThickness" Value="0 1 0 0"/>
    </Style>


    <Style x:Key="InputTextbox" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
        <Setter Property="Background" Value="{StaticResource InputBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource InputBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="5 5 5 0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource InputBackgroundMouseOver}"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorderMouseOver}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource InputBackgroundMousePressed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorderMousePressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputTextboxNoMargin" TargetType="TextBox" BasedOn="{StaticResource InputTextbox}">
        <Setter Property="Margin" Value="0"/>
    </Style>

    <Style x:Key="InputBigTextbox" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
        <Setter Property="Background" Value="{StaticResource InputBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource InputBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="5 0 5 0"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="AcceptsReturn" Value="False"/>
        <Setter Property="Height" Value="200"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource InputBackgroundMouseOver}"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorderMouseOver}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource InputBackgroundMousePressed}"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorderMousePressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="InputDatePicker" TargetType="DatePicker">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource InputBorder}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="5 5 5 0"/>
        <Setter Property="Padding" Value="5"/>
        <Style.Resources>
            <Style TargetType="DatePickerTextBox">
                <Setter Property="Foreground" Value="{StaticResource GlobalForeground}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
            </Style>
        </Style.Resources>
    </Style>

    <ControlTemplate x:Key="FlatComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" x:Name="Border" Grid.ColumnSpan="2"
                    Background="{StaticResource GlobalBackground}"
                    BorderBrush="{StaticResource InputBorder}"
                    CornerRadius="5"
                    BorderThickness="2"/>
            <Border Grid.Column="0" x:Name="PressedBorder" Grid.ColumnSpan="2"
                    Background="{StaticResource GlobalBackground}"
                    BorderBrush="{StaticResource InputBorder}"
                    BorderThickness="2"
                    Opacity="0"/>
            <ContentPresenter Grid.Column="0"
                              x:Name="ContentPresenter"
                              HorizontalAlignment="Left"
                              Margin="5"
                              VerticalAlignment="Center"/>
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Fill="{StaticResource GlobalForeground}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource InputBorderMouseOver}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="Arrow" Property="Data" Value="M0,4 L4,0 L8,4 L4,8 z"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource GlobalBackground}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource InputBorder}"/>
                <Setter TargetName="ContentPresenter" Property="TextElement.Foreground" Value="{StaticResource GlobalForegroundDisabled}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource GlobalForegroundDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="FlatComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="{StaticResource GlobalForeground}"/>
        <Setter Property="Background" Value="{StaticResource GlobalBackground}"/>
        <Setter Property="BorderBrush" Value="{StaticResource InputBorder}"/>
        <Setter Property="BorderThickness" Value="5"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                      Template="{StaticResource FlatComboBoxToggleButton}"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter x:Name="ContentPresenter"
                                          Margin="5"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"/>
                        <Popup x:Name="Popup"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               Focusable="False"
                               AllowsTransparency="True"
                               PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                        Background="{StaticResource GlobalBackground}"
                                        BorderBrush="{StaticResource InputBorder}"
                                        BorderThickness="2"/>
                                <ScrollViewer Margin="10" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentPresenter" Property="TextElement.Foreground"
                                    Value="{StaticResource GlobalForegroundDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0 2 0 0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource InputBorder}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource InputBackgroundMouseOver}"/>
                <Setter Property="BorderBrush" Value="{StaticResource InputBorderMouseOver}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ListBox" x:Key="VirtualizedListBox">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>